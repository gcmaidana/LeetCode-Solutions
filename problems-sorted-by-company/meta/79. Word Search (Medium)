# Question link: https://leetcode.com/problems/word-search/description/
# Context: This one YouTube video I saw of a guy who did a mock interview at Meta (Meta allows you practice before you do the actual interview)
# noted this was one of the problems on the Mock interview he did. https://www.youtube.com/watch?v=VdIhKjdjfAs

class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        ROWS = len(board)
        COLS = len(board[0])
        seen = [[0] * COLS for _ in range(ROWS)]
        ptr = 0
         
        def checkBoard(r, c, ptr):
            if r < 0 or r >= ROWS or c < 0 or c >= COLS:
                return False
            if seen[r][c] == 0 and word[ptr] == board[r][c]:
                seen[r][c] = 1
                ptr += 1
                if ptr == len(word):
                    return True
                if (checkBoard(r + 1, c, ptr) or
                    checkBoard(r - 1, c, ptr) or
                    checkBoard(r, c + 1, ptr) or
                    checkBoard(r, c - 1, ptr)):
                    return True
                seen[r][c] = 0  # Backtrack
            return False

        for r in range(ROWS):
            for c in range(COLS):
                if checkBoard(r, c, ptr):
                    return True
        return False



        
