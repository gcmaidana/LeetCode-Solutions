# Question link: https://leetcode.com/problems/group-anagrams/description/?envType=daily-question&envId=2024-02-06

# Basically, sort the word, if it doesnt exist in the hashmap, add it as a key,
# if the word gets sorted, and it exists in the hashmap, append the unsorted word as an additional value for the key
# return the values of the hashmap to get the list of all the anagrams

class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        anagram = defaultdict(int)


        for word in strs:
            sorted_word = ''.join(sorted(word))
            if sorted_word in anagram:
                anagram[sorted_word].append(word)
            else:
                anagram[sorted_word] = [word]
            
        return anagram.values()
