# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:
        tree1 = []
        tree2 = []


        def dfs(root, numTree):

            if root is None:
                return
            
            if root.left is None and root.right is None and numTree == 1:
                tree1.append(root.val)
            if root.left is None and root.right is None and numTree == 2:
                tree2.append(root.val)
            dfs(root.left, numTree)
            dfs(root.right, numTree)
        

        dfs(root1, 1)
        dfs(root2, 2)

        return tree1 == tree2
