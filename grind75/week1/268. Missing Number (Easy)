# Question link: https://leetcode.com/problems/missing-number/

# This question was sort of easy to solve, it's similar to a subproblem of one of the daily problems I've done recently
# https://leetcode.com/problems/set-mismatch/

class Solution:
    def missingNumber(self, nums: List[int]) -> int:
        mymap = Counter(nums)
        for i in range(0, len(nums) + 1):
            if mymap[i] == 0:
                return i

# In terms of using O(1) space complexity, I don't remember how to solve it, but I know there's a 
# mathematical formula to use that you can use to find the missing number without any data structures, but I forgot how to derive it

class Solution:
    def missingNumber(self, nums: List[int]) -> int:
        res = len(nums)

        for i in range(len(nums)):
            res += (i - nums[i])

        return res
        
