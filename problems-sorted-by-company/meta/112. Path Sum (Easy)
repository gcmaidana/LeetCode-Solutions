# Question link: https://leetcode.com/problems/path-sum/description/
# Context: This one YouTube video I saw of a guy who did a mock interview at Meta (Meta allows you practice before you do the actual interview)
# noted this was one of the problems on the Mock interview he did. https://www.youtube.com/watch?v=VdIhKjdjfAs

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:

        def helper(root, currSum):
            if root is None:
                return False
            currSum += root.val
            print(currSum)
            if root.left is None and root.right is None:
                return currSum == targetSum
            return helper(root.left, currSum) or helper(root.right, currSum)
        
        return helper(root, 0)
        
