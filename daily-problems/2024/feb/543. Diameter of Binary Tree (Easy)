# Question link: https://leetcode.com/problems/diameter-of-binary-tree/description/?envType=daily-question&envId=2024-02-27

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        max_diameter = [0]
        def dfs(root):

            if root is None:
                return 0
            
            left = dfs(root.left)
            right = dfs(root.right)

            max_diameter[0] = max(max_diameter[0], left + right)

            return 1 + max(left, right)
        

        dfs(root)
        return max_diameter[0]

            
        
