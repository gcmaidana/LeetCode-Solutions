# Question link: https://leetcode.com/problems/implement-stack-using-queues/

# Note: This problem is NOT on the Grind 75 list, but I included it because it's very similar to 
# a problem that is on the Grind 75 list, which is LeetCode 232. Implement Queue using Stacks
# Similar problem link: https://leetcode.com/problems/implement-queue-using-stacks/description/
# Also, we only need to use one queue, two isn't necessary



class MyStack:
   
    def __init__(self):
        self.q = deque()

    def push(self, x: int) -> None:
        self.q.append(x)
        for i in range(len(self.q) - 1):
            self.q.append(self.q.popleft())

    def pop(self) -> int:
       return self.q.popleft()
        

    def top(self) -> int:
        return self.q[0]

    def empty(self) -> bool:
        return not len(self.q)
        


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()
