// Problem link: https://leetcode.com/problems/k-closest-points-to-origin/

// My solution
class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> myPoints;
        vector<vector<int>> ans;
        for(const auto& point : points)
        {
            int x = point[0];
            int y = point[1];
            int z = std::pow(x, 2) + std::pow(y, 2);
            myPoints.push_back({z, x, y});
        }
        
        // sort points by z
        std::sort(myPoints.begin(), myPoints.end());

        for(const auto& dir : myPoints)
        {
            int z = dir[0];
            int x = dir[1];
            int y = dir[2];
            if(k == 0) { return ans; }
            ans.push_back({x,y});
            k -= 1;
        }

        return ans;
        
    }
};

