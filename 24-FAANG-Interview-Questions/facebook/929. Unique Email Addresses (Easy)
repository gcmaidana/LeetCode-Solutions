# Question link: https://leetcode.com/problems/unique-email-addresses/description/

# This is a really good problem for getting acquainted with string splicing

class Solution:
    def numUniqueEmails(self, emails: List[str]) -> int:
        # local name: alice
        # domain name: leetcode.com
        
        # Local name can contain dots or pluses

        # Dots between characters in the local name mean
        # it will be sent to the local name wihtout the dots
        # alice.z -> alicez
        
        # Pluses mean everything after the first plus will be ignored
        # only applies to local name, not domain name
        # m.y+name@email.com -> my@email.com
        emails_set = set()
        for email in emails:
            s1 = s2 = ""
            
            # First let's find the @, and slice at that index and everything that
            at_pos = email.index("@")
            s2 = email[at_pos:]

            # Now handle pluses, then dots
            # If there is no plus, then we just slice up to but not include the @
            if '+' in email:
                plus_pos = email.index("+")
                s1 = email[:plus_pos]
            else:
                s1 = email[:at_pos]
            
            if '.' in s1:
                s1 = s1.replace(".", "")

 
            full_email = s1 + s2
            print(full_email)
            if full_email not in emails_set:
                emails_set.add(full_email)  


        return len(emails_set)


        

